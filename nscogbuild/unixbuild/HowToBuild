How To Build On Linux
---------------------

Contents:
	- How to build the Newspeak Cog VM on Unix
	- Testing an external plugin has completely linked
	- Compiling in 32-bit mode on a 64-bit linux
	- Testing an external plugin has completely linked
	- N.B. Please read: Optimization level and gcc version

How to build the Newspeak VM on Unix
-------------------------------
1. Install the tools (gcc, X11-devel, etc (e.g. libpng, libX11 & libxt source))
2. Check out the following sources from svn (if you haven't already - if you're
   reading this in unixbuild its likely you've already got the sources)
     svn co http://www.squeakvm.org/svn/squeak/branches/Cog/platforms
     svn co http://www.squeakvm.org/svn/squeak/branches/Cog/src
     svn co http://www.squeakvm.org/svn/squeak/branches/Cog/nscogbuild
3. Open a shell, cd into the unixbuild/bld directory and execute
     ../../../platforms/unix/config/configure --with-src=nscogsrc CFLAGS="-g -O2 -msse2 -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64 -DNDEBUG -DITIMER_HEARTBEAT=1 -DNO_VM_PROFILE=1 -DDEBUGVM=0" LIBS="-lpthread -luuid"
     make install prefix=WhereYouWantTheVmToGo

	N.B.  On Ubuntu *do not* supply "LIBS="-lpthread -luuid"", i.e. use
     ../../../platforms/unix/config/configure --with-src=nscogsrc CFLAGS="-g -O2 -msse2 -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64 -DNDEBUG -DITIMER_HEARTBEAT=1 -DNO_VM_PROFILE=1 -DDEBUGVM=0"

4. At the end of it you'll get a new VM in the path provided via -prefix

N.B. The plugin set is defined by plugins.ext and plugins.int in the build dir.


3a. For an assert-enabled VM do
     ../../../platforms/unix/config/configure --without-vm-display-fbdev --without-npsqueak --with-src=nscogsrc CFLAGS="-g -O1 -msse2 -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64 -DITIMER_HEARTBEAT=1 -DNO_VM_PROFILE=1 -DDEBUGVM=0" LIBS="-lpthread -luuid"

3b. For a full debug VM do
     ../../../platforms/unix/config/configure --without-vm-display-fbdev --without-npsqueak --with-src=nscogsrc CFLAGS="-g3 -msse2 -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64 -DITIMER_HEARTBEAT=1 -DNO_VM_PROFILE=1 -DDEBUGVM=1" LIBS="-lpthread -luuid"

3c. If you're building the VM on a 64-bit OS, you'll need a compiler which can
compile and link to 32-bit binaries. On most Linuxes the gcc-multilib package
provides the 32-bit compiler and the ia32-libs provides the 32-bit libraries.
You'll also have to add the -m32 switch to all gcc & g++ invocations.  The
easiest way to do this is to add CC="gcc -m32" & CXX="g++ -m32" to the configure
script:
     ../../../platforms/unix/config/configure CC="gcc -m32" CXX="g++ -m32" --with-src=nscogsrc CFLAGS="-g -O2 -msse2 -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64 -DNDEBUG -DITIMER_HEARTBEAT=1 -DNO_VM_PROFILE=1" LIBS="-lpthread -luuid"
To run a 32-bit VM on a 64-bit OS, you'll also need the 32-bit libraries
provided by the ia32-libs package.


Compiling in 32-bit mode on a 64-bit linux
-------------------------------
Follow 3d. above.  Also note that according to Paul DeBruicker the following
packages need to be installed to compile in 32-bt mode on 64-bit ubuntu.  YMMV.

build-essential
ia32-libs
gcc-multilib
g++multilib


Testing an external plugin has completely linked
-------------------------------
You may find that an external plugin compiles and links but does not load.
This is usually because it contans undefined symbols.  To find undefined
symbols, remake the plugin, capturing the link step and then supply
	-Wl,--warn-unresolved-symbols -Wl,--no-allow-shlib-undefined
when manually repeating the link command


Optimization level and gcc version
----------------------------------
There appear to be issues with 3.4.x gcc version on RedHat.  In particular
compiling the Newspeak VM with either of
	gcc version 3.4.6 20060404 (Red Hat 3.4.6-3)
	gcc version 3.4.6 20060404 (Red Hat 3.4.6-10)
using -O2 results in a VM that segfaults early in startup.  For these compilers
it is probably wise to use -O1, even though -O3 seems to work.
