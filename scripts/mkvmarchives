#!/bin/sh
IFS="	
"
NSB=nscogbuild
#NSB=nsbuild
if [ $# = 0 ]; then
CL=1
CM=1
CW=1
CTL=1
CTM=1
CTW=1
NL=1
NM=1
NW=1
else
CL=
CM=
CW=
CTL=
CTM=
CTW=
NL=
NM=
NW=
	while [ -n "$1" ]; do
		case $1 in
		-c)		CL=1;CM=1;CW=1;CTL=1;CTM=1;CTW=1;;
		-cl)	CL=1;;
		-cm)	CM=1;;
		-cw)	CW=1;;
		-ctl)	CTL=1;;
		-ctm)	CTM=1;;
		-ctw)	CTW=1;;
		-n)		NL=1;NM=1;NW=1;;
		-nl)	NL=1;;
		-nm)	NM=1;;
		-nw)	NW=1;;
		-l)		CL=1;CTL=1;NL=1;;
		-m)		CM=1;CTM=1;NM=1;;
		-w)		CW=1;CTW=1;NW=1;;
		-?|-h)  echo usage: $0 [-c -n -l -m -w -c[lmw] -ct[lmw] -n[lmw]]; exit 0
		esac
		shift
	done
fi
EXES=
REV=`grep 'SvnRawRevisionString.*Rev:' platforms/Cross/vm/sqSCCSVersion.h \
	| sed 's/^.*Rev: \([0-9][0-9]*\) $";/\1/'`
TAG=`date +%g.%U.`$REV
echo REV=$REV TAG=$TAG
if [ -n "$CL" ]; then
	rm -rf coglinux-$TAG.tgz
	COPYFILE_DISABLE=1 tar czf coglinux-$TAG.tgz coglinux
	EXES="$EXES	coglinux/lib/squeak/[0-9.-]*/squeak"
fi
if [ -n "$CTL" ]; then
	rm -rf cogmtlinux-$TAG.tgz
	COPYFILE_DISABLE=1 tar czf cogmtlinux-$TAG.tgz cogmtlinux
	EXES="$EXES	cogmtlinux/lib/squeak/[0-9.-]*/squeak"
fi
if [ -n "$CM" ]; then
	test -d Cog.app || mkdir Cog.app
	rm -rf Cog.app/* Cog.app-$TAG.tgz
	(cd macbuild/Fast.app>/dev/null;tar cf - *)|(cd Cog.app;tar xvf -)
	tar czf Cog.app-$TAG.tgz Cog.app
	EXES="$EXES	Cog.app/Contents/MacOS/Squeak"
fi
if [ -n "$CTM" ]; then
	test -d CogMT.app || mkdir CogMT.app
	rm -rf CogMT.app/* CogMT.app-$TAG.tgz
	(cd macbuild/FastMT.app>/dev/null;tar cf - *)|(cd CogMT.app;tar xvf -)
	tar czf CogMT.app-$TAG.tgz CogMT.app
	EXES="$EXES	CogMT.app/Contents/MacOS/Squeak"
fi
if [ -n "$CW" ]; then
	test -d cogwin || mkdir cogwin
	rm -rf cogwin/* cogwin-$TAG.zip
	ln cygwinbuild/build/vm/{Squeak.exe,Squeak.ini,Squeak.map,Squeak.exe.manifest} cogwin
	ln cygwinbuild/build/vm/{SqueakConsole.exe,SqueakConsole.ini,SqueakConsole.map} cogwin
	ln cygwinbuild/build/vm/*.dll cogwin
	zip -vr cogwin-$TAG.zip cogwin
	EXES="$EXES	cogwin/Squeak.exe"
fi
if [ -n "$CTW" ]; then
	test -d cogmtwin || mkdir cogmtwin
	rm -rf cogmtwin/* cogmtwin-$TAG.zip
	ln cygwinbuild/buildmt/vm/{Squeak.exe,Squeak.ini,Squeak.map,Squeak.exe.manifest} cogmtwin
	ln cygwinbuild/buildmt/vm/{SqueakConsole.exe,SqueakConsole.ini,SqueakConsole.map} cogmtwin
	ln cygwinbuild/buildmt/vm/*.dll cogmtwin
	zip -vr cogmtwin-$TAG.zip cogmtwin
	EXES="$EXES	cogmtwin/Squeak.exe"
fi
if [ -n "$NL" ]; then
	rm -rf nsvmlinux-$TAG.tgz nsvmlinux-$TAG.tgz
	COPYFILE_DISABLE=1 tar czf nsvmlinux-$TAG.tgz nsvmlinux
	EXES="$EXES	nsvmlinux/lib/nsvm/4.0-$REV/nsvm"
fi
if [ -n "$NM" ]; then
	test -d Newspeak\ Virtual\ Machine.app || mkdir Newspeak\ Virtual\ Machine.app
	rm -rf Newspeak\ Virtual\ Machine.app/* Newspeak\ Virtual\ Machine.app-$TAG.tgz
	(cd $NSB/macbuild/Fast.app>/dev/null;tar cf - *)|(cd Newspeak\ Virtual\ Machine.app;tar xvf -)
	tar czf Newspeak\ Virtual\ Machine.app-$TAG.tgz Newspeak\ Virtual\ Machine.app
	EXES="$EXES	Newspeak Virtual Machine.app/Contents/MacOS/Newspeak Virtual Machine"
fi
if [ -n "$NW" ]; then
	test -d nsvmwin || mkdir nsvmwin
	rm -rf nsvmwin/* nsvmwin-$TAG.zip
	ln $NSB/cygwinbuild/build/vm/{nsvm.exe,nsvm.map,nsvm.exe.manifest} nsvmwin
	ln $NSB/cygwinbuild/build/vm/*.dll nsvmwin
	zip -vr nsvmwin-$TAG.zip nsvmwin
	EXES="$EXES	nsvmwin/nsvm.exe"
fi
for vm in $EXES
do
	echo
	echo checking $vm version
#	strings - $vm | egrep '\$Rev: |Interp.*VMMaker|Cogit.*VMMaker| built on ' | grep -v 'Unix built on "__DATE__ " "__TIME__" Compiler: "__VERSION__' | sed 's/ uuid:.*//'
	strings - $vm | egrep '\$Rev: |Interp.*VMMaker|Cogit.*VMMaker| built on ' | sed 's/ uuid:.*//'
	echo checking $vm for asserts
	strings - $vm | grep "assert[^0-9]*[0-9][0-9][0-9]"
done 2>&1 | tee MVALOG
